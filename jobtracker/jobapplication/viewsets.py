from rest_framework import permissions, viewsets

from jobapplication.models import Company, JobReference, JobApplication
from jobapplication.permissions import IsOwnerOrAdmin
from jobapplication.serializers import (CompanySerializer,
                                        JobReferenceSerializer,
                                        JobApplicationSerializer,
                                        )


class CompanyViewset(viewsets.ModelViewSet):
    """Viewset for Company objects.

    Company views should only be accessible by authenticated users

    Fields:
        queryset: list of companies ordered by name
        serializer_class: serializer to use to represent companies
        permission_classes: restrictions on who can access company endpoints

     Methods:
        get_queryset: Return a list of Companies created by the current user. If
            they are a superuser, return all Company records.
        perform_create: Assign the user associated with the current request to
            the Company being created before saving.

    """

    serializer_class = CompanySerializer
    permission_classes = (permissions.IsAuthenticated, IsOwnerOrAdmin)

    def get_queryset(self):
        """
        Return a list of companies created by the current user. If they are a
        superuser, return all Company records
        :return: Queryset of Companies
        """
        if self.request.user.is_superuser:
            return Company.objects.all().order_by('name')

        return Company.objects.filter(
            creator=self.request.user).order_by('name')

    def perform_create(self, serializer):
        """
        Add currently authenticated user as creator of this company object
        :param serializer: Serializer generated using the data from current
            request
        """
        serializer.save(creator=self.request.user)


class JobReferenceViewset(viewsets.ModelViewSet):
    """Viewset for JobReference objects.

    JobReference views should only be accessible by authenticated users

    Fields:
        serializer_class: serializer to use to represent job references
        permission_classes: restrictions on who can access job reference
            endpoints

    Methods:
        get_queryset: Only get records created by the current user if they are
            a normal user. If they are a superuser, return all records.
        perform_create: Assign currently authenticated user as the object's
            creator
    """

    queryset = JobReference.objects.all().order_by('name')
    serializer_class = JobReferenceSerializer
    permission_classes = (permissions.IsAuthenticated, IsOwnerOrAdmin,)

    def perform_create(self, serializer):
        """
       Add currently authenticated user as creator of this JobReference object
       :param serializer: Serializer generated using the data from current
           request
       """
        serializer.save(creator=self.request.user)


class JobApplicationViewset(viewsets.ModelViewSet):
    """Viewset for JobApplication objects.

    JobApplication views should only be accessible by authenticated users.

    Fields:
        queryset: list of job applications ordered by submission date

    Views for each transition method are automatically generated by
    get_drf_fsm_mixin.

    References:
        https://github.com/27medkamal/djangorestframework-fsm

    """

    queryset = JobApplication.objects.all().order_by('submitted_date')
    serializer_class = JobApplicationSerializer
    permission_classes = (permissions.IsAuthenticated, IsOwnerOrAdmin,)
